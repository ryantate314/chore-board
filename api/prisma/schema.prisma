// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Home {
  id      Int      @id @default(autoincrement())
  uuid    String   @unique @default(uuid())
  name    String
  members Member[]
}

model Member {
  id                 Int            @id @default(autoincrement())
  uuid               String         @unique @default(uuid())
  home               Home           @relation(fields: [homeId], references: id)
  homeId             Int
  ownedTaskInstances TaskInstance[]
}

model TaskProfile {
  id          Int    @id
  description String

  taskDefinitions TaskDefinition[]
}

model TaskDefinition {
  id               Int            @id @default(autoincrement())
  uuid             String         @unique @default(uuid())
  shortDescription String
  description      String?
  taskInstances    TaskInstance[]
  taskProfile      TaskProfile    @relation(fields: [taskProfileId], references: id)
  taskProfileId    Int
  schedules        TaskSchedule[]
  deletedAt        DateTime?
}

// e.g. Daily, Weekly, Monthly
model FrequencyType {
  id            Int            @id
  name          String
  schedules TaskSchedule[]
}

// Use the iCalendar RRULE format
model TaskSchedule {
  id               Int            @id @default(autoincrement())
  startDate        DateTime
  endDate          DateTime
  // https://www.kanzaki.com/docs/ical/rrule.html
  rrule            String
  taskDefinitionId Int
  taskDefinition   TaskDefinition @relation(fields: [taskDefinitionId], references: id)
  frequencyTypeId  Int
  frequencyType    FrequencyType  @relation(fields: [frequencyTypeId], references: id)
}

model TaskInstance {
  id               Int            @id @default(autoincrement())
  uuid             String         @unique @default(uuid())

  instanceDate DateTime

  taskStatusId Int?
  taskStatus TaskStatus? @relation(fields: [taskStatusId], references: id)
  
  taskDefinition   TaskDefinition @relation(fields: [taskDefinitionId], references: id)
  taskDefinitionId Int

  createdAt        DateTime
  createdBy        Member?        @relation(fields: [createdById], references: id)
  createdById      Int?

  history TaskHistory[]
}

model TaskStatus {
  id Int @id
  name String

  taskInstances TaskInstance[]
}

model TaskHistory {
  id             Int          @id @default(autoincrement())
  taskInstance   TaskInstance @relation(fields: [taskInstanceId], references: id)
  taskInstanceId Int
  description    String
}
